<style>
  /* Always set the map height explicitly to define the size of the div
   * element that contains the map. */
  #map {
    height: 100%;
  }
  /* Optional: Makes the sample page fill the window. */
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
  }

</style>
<div>
  <a href="/attractives/<%= @attractive.id %>">Back</a>
</div>
<div id="map"></div>
<script>
    var attractive = <%= @attractive.to_json.html_safe %>;
    var coffe = <%= raw @coffe %>;
    var map, infoWindow;

    function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;

        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -34.397, lng: 150.644},
            zoom: 6
        });

        infoWindow = new google.maps.InfoWindow;

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                var marker = new google.maps.Marker({
                    position: pos,
                    map: map,
                    icon: {
                        path: google.maps.SymbolPath.CIRCLE,
                        fillOpacity: 1,
                        fillColor: "#FF0000",
                        strokeOpacity: 0,
                        scale: 5
                    }
                });

                infoWindow.setPosition(pos);
                infoWindow.setContent('Location found.');
                infoWindow.open(map);
                map.setCenter(pos);


                directionsDisplay.setMap(map);
                directionsService.route({
                    origin: new google.maps.LatLng(pos.lat, pos.lng),
                    destination: new google.maps.LatLng(parseFloat(attractive.latitude), parseFloat(attractive.longitude)),
                    travelMode: 'TRANSIT'
                }, function(response, status) {
                    if (status === 'OK') {
                        directionsDisplay.setDirections(response);
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });

            }, function() {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }

        var kmDistance = 0.6;
        coffe.forEach(function(element){
            console.log(getDistanceFromLatLonInKm(element[2], element[3], parseFloat(attractive.latitude), parseFloat(attractive.longitude)));
            if (getDistanceFromLatLonInKm(element[2], element[3], parseFloat(attractive.latitude), parseFloat(attractive.longitude)) < kmDistance) {
                addMarker(element[2], element[3], element[0], element[1]);
            }
        });

    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
    }

    function addMarker(lat, lon, name, description) {
        var htmlDescription = "<h4>" + name + "</h4><hr>"+
            "<p>" + description + "</p>";
        var infoWindow = new google.maps.InfoWindow({
            content: htmlDescription
        });
        var marker = new google.maps.Marker({
            position: { lat: lat, lng: lon },
            map: map,
            title: "Cafeter√≠a: " + name,
            icon: 'http://maps.google.com/mapfiles/kml/shapes/snack_bar.png'
        });
        marker.addListener('click', function() {
            infoWindow.open(map, marker);
        });
    }

    function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {
        var R = 6371; // Radius of the earth in km
        var dLat = deg2rad(lat2-lat1);  // deg2rad below
        var dLon = deg2rad(lon2-lon1);
        var a =
            Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
            Math.sin(dLon/2) * Math.sin(dLon/2)
        ;
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        var d = R * c; // Distance in km
        return d;
    }

    function deg2rad(deg) {
        return deg * (Math.PI/180)
    }

</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD9jU-2Y8b3yi-n7Q7GUERXiEtWYViH3mE&callback=initMap">
</script>
